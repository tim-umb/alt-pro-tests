/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import MainNav from 'src/components/MainNav/MainNav';
import AppBar from 'src/components/AppBar/AppBar';
import Header from 'src/components/Header/Header';
import EntityContainer from 'src/components/EntityContainer/EntityContainer';
import { PageTemplatePrototypeProps } from 'src/types';
import usePageTemplatePrototype from 'src/components/PageTemplatePrototype/usePageTemplatePrototype';

const StateNavOpened: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100vw',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: '100vh',
});

const PageTemplate: any = styled('div')(({ theme }: any) => ({
  backgroundColor: theme.palette['colors']['grey']['100'],
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: `1080px`,
  margin: `0px`,
}));

const MainNav1: any = styled(MainNav)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Box1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const AppBar1: any = styled(AppBar)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Header1: any = styled(Header)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Content: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: data.isClosed ? `64px` : `64px 64px 0px 64px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
}));

const EntityContainer1: any = styled(EntityContainer)(({ theme }: any) => ({
  alignSelf: `stretch`,
  height: `709px`,
  margin: `0px`,
}));

function PageTemplatePrototype(props: PageTemplatePrototypeProps): JSX.Element {
  const { data } = usePageTemplatePrototype();

  return (
    <StateNavOpened className={props.className}>
      <PageTemplate>
        <MainNav1 />
        <Box1>
          <AppBar1 />
          <Header1 />
          <Content data={data}>
            <EntityContainer1 />
          </Content>
        </Box1>
      </PageTemplate>
    </StateNavOpened>
  );
}

export default PageTemplatePrototype;
